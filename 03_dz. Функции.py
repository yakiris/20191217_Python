task = int(input('Запустить задачу номер: '))

if task == 1:
# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
    def div(a, b):
        try:
            c = round(a/b, 2)
        except ZeroDivisionError:
            return 'Деление на ноль!'
        return c

    a = int(input('Число а: '))
    b = int(input('Число b: '))
    print(f'Ответ: {a} / {b} = {div(a,b)}')

if task == 2:
# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры
# как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
    def personal (name, surname, year, city, email, phone):
        print(f'{name} {surname}, год рождения:{year}, город проживания:{city}, e-mail:{email}, телефон:{phone}')

    personal(name='name', email='email', phone='phone', surname='surname', year='year', city='city')

if task == 3:
# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму
# наибольших двух аргументов.
    def my_func(a, b, c):
        my_list = [a, b, c]
        my_list.remove(min(my_list))
        my_sum = sum(my_list)
        return my_sum

    print(my_func(1, 2, 3))

if task == 4:
# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора *.
# Второй — более сложная реализация без оператора *, предусматривающая использование цикла.
    def my_func1(x, y):
        z = x ** y
        return z

    def my_func2(x, y):
        z = x
        for i in range(abs(y) - 1):
            z *= x
        return 1/z

    print(my_func1(0.25, -5))
    print(my_func2(0.25, -5))

if task == 5:
# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна
# выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова
# нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо
# числа вводится специальный символ, выполнение программы завершается. Если специальный символ
# введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и
# после этого завершить программу.
    def summ():
        ex = False
        my_sum = 0
        while ex == False:
            numbers = input('Введите число или q для завершения сложения: ').split()
            res_line = 0
            for num in numbers:
                if 'q' in num:
                    ex = True
                    break
                else:
                    res_line += int(num)
            my_sum += res_line
            print(my_sum)

    summ()

if task == 6:
# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
    def int_func(my_str):
        return my_str.title()

    print(int_func(input('Внесите слово: ')))
    print(int_func(input('Внесите предложение: ')))
