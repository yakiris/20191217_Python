task = int(input('Запустить задачу номер: '))

if task == 1:
# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
    my_list = ['Строка', 20, 14.5, True, [1, 2, 'str'], (2, 5, 8), {1, 2, 3}, {'id': 1, 'name': 'name'}]
    for i in my_list:
        print(type(i))

elif task == 2:
    # 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
    # При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов необходимо использовать
    # функцию input().
    my_list = []
    count = int(input('Сколько элементов будет содержать список? '))

    for i in range(count):
        el = input('Введите элемент в список: ')
        my_list.append(el)

    for i in range(1, len(my_list), 2):
        my_list[i-1], my_list[i] = my_list[i], my_list[i-1]

    print(my_list)

elif task == 3:
# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
    mounth = int(input('Введите число от 1 до 12: '))
    if mounth >= 1 and mounth <= 12:
        # ----- > Решение через list
        my_list = ['зима', 'весна', 'лето', 'оcень']
        if mounth == 12 or mounth == 1 or mounth == 2:
            print(f'{mounth}-й месяц - это {my_list[0]}')
        elif 3 <= mounth <= 5:
            print(f'{mounth}-й месяц - это {my_list[1]}')
        elif 6 <= mounth <= 8:
            print(f'{mounth}-й месяц - это {my_list[2]}')
        else:
            print(f'{mounth}-й месяц - это {my_list[3]}')
        # ----- > Решение через dist
        my_dict = {1: 'зима', 2: 'зима', 3: 'весна', 4: 'весна', 5: 'весна', 6: 'лето',
                   7: 'лето', 8: 'лето', 9: 'осень', 10: 'осень', 11: 'осень', 12: 'зима'}
        print(f'{mounth}-й месяц - это {my_dict.get(mounth)}')
    else:
        print('Введенное число не входит в запрашиваемый интервал.')

elif task == 4:
# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
    user_str = input('Введите предложение из нескольких слов: ')
    my_list = user_str.split()
    for ind, el in enumerate(my_list, 1):
        print(ind, el[:10])

elif task == 5:
# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
# с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
    my_list = [7, 5, 3, 3, 2]
    print(my_list)
    num = int(input('Введите число: '))
    ind = my_list.count(num)
    if ind != 0:
        my_list.insert(my_list.index(num), num)
    else:
        my_list.append(num)
        my_list.sort(reverse=True)
    print(my_list)

elif task == 6:
# 6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента —
# номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

    my_list = ['Название', 'Цена', 'Количество', 'Ед.изм.']
    analitics = {'Название': [], 'Цена': [], 'Количество': [], 'Ед.изм.': []}
    num = 3
    for i in range(1, num):
        for j in my_list:
            user_data = input(f'Введите {j.lower()}: ')
            user_data = int(user_data) if (j == 'Цена' or j == 'Количество') else user_data
            analitics[j].append(user_data)
    print('*' * 30)
    print('Аналитика о товарах')
    for key, value in analitics.items():
        print(f'{key}: {value}')